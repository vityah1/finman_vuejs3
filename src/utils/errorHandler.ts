import type { AxiosError } from 'axios';
import type { HTTPValidationError, ValidationError } from '@/api/model';

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —É—Ç–∏–ª—ñ—Ç–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ API
 */

/**
 * –û—Ç—Ä–∏–º—É—î –∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ AxiosError
 * @param error - –ø–æ–º–∏–ª–∫–∞ Axios
 * @param defaultMessage - –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
 * @returns –∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
 */
export function getErrorMessage(error: AxiosError<HTTPValidationError | any>, defaultMessage: string = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞"): string {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø –ø–æ–º–∏–ª–∫–∏ –º–µ—Ä–µ–∂—ñ
    if (error.code === 'ERR_NETWORK' || error.message === 'Network Error') {
        return "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∞–±–æ —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.";
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ timeout –ø–æ–º–∏–ª–∫–∏
    if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {
        return "–ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞ –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.";
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞
    if (error.response?.data) {
        const responseData = error.response.data;
        const status = error.response.status;

        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å detail, –Ω–∞–≤—ñ—Ç—å –¥–ª—è –ø–æ–º–∏–ª–æ–∫ 5xx
        // –Ø–∫—â–æ —î –ø–æ–ª–µ detail —è–∫ —Ä—è–¥–æ–∫ (–∑–∞–≥–∞–ª—å–Ω—ñ –ø–æ–º–∏–ª–∫–∏ API)
        if (typeof responseData.detail === 'string') {
            return responseData.detail;
        }

        // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        if (status === 401) {
            return "–°–µ—Å—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è. –ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∑–Ω–æ–≤—É.";
        }

        if (status === 403) {
            return "–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –¥—ñ—ó.";
        }

        // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞ (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ–º–∞—î detail)
        if (status >= 500) {
            return "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
        }

        // –Ø–∫—â–æ —î –ø–æ–ª–µ detail —è–∫ –º–∞—Å–∏–≤ ValidationError (–ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó)
        if (Array.isArray(responseData.detail) && responseData.detail.length > 0) {
            const firstError = responseData.detail[0] as ValidationError;
            if (firstError.msg) {
                return firstError.msg;
            }
        }

        // –Ø–∫—â–æ —î –ø–æ–ª–µ message (–¥–µ—è–∫—ñ API –º–æ–∂—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü–µ –ø–æ–ª–µ)
        if (responseData.message) {
            return responseData.message;
        }

        // –Ø–∫—â–æ —î –ø–æ–ª–µ error
        if (responseData.error) {
            return responseData.error;
        }
    }

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –±–µ–∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞
    if (!error.response) {
        if (error.request) {
            return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑'—î–¥–Ω–∞—Ç–∏—Å—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É.";
        }
        return "–ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É.";
    }

    // Fallback –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    return defaultMessage;
}

/**
 * –ü–æ–∫–∞–∑—É—î –∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –≤ –∫–æ–Ω—Å–æ–ª—ñ (–¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏)
 * @param error - –ø–æ–º–∏–ª–∫–∞
 * @param context - –∫–æ–Ω—Ç–µ–∫—Å—Ç, –¥–µ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞
 */
export function logError(error: any, context: string = "Unknown"): void {
    const userMessage = getErrorMessage(error);
    console.group(`üö® –ü–æ–º–∏–ª–∫–∞ –≤ ${context}`);
    console.log("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", userMessage);
    console.log("–¢–µ—Ö–Ω—ñ—á–Ω—ñ –¥–µ—Ç–∞–ª—ñ:", error);
    if (error.response) {
        console.log("–°—Ç–∞—Ç—É—Å:", error.response.status);
        console.log("–î–∞–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:", error.response.data);
    }
    console.groupEnd();
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –ø–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂–µ–≤–æ—é
 * @param error - –ø–æ–º–∏–ª–∫–∞
 * @returns true, —è–∫—â–æ —Ü–µ –º–µ—Ä–µ–∂–µ–≤–∞ –ø–æ–º–∏–ª–∫–∞
 */
export function isNetworkError(error: AxiosError): boolean {
    return error.code === 'ERR_NETWORK' || 
           error.message === 'Network Error' || 
           !error.response;
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –ø–æ–º–∏–ª–∫–∞ –ø–æ–º–∏–ª–∫–æ—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
 * @param error - –ø–æ–º–∏–ª–∫–∞
 * @returns true, —è–∫—â–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
 */
export function isAuthError(error: AxiosError): boolean {
    return error.response?.status === 401 || error.response?.status === 403;
}

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –ø–æ–º–∏–ª–∫–∞ –ø–æ–º–∏–ª–∫–æ—é —Å–µ—Ä–≤–µ—Ä–∞
 * @param error - –ø–æ–º–∏–ª–∫–∞
 * @returns true, —è–∫—â–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (5xx)
 */
export function isServerError(error: AxiosError): boolean {
    return (error.response?.status ?? 0) >= 500;
}
